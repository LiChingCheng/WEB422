{"version":3,"sources":[" Component/NavBar.js"," Component/SideBar.js"," Component/MainContainer.js"," Component/ProjectsPanel.js"," Component/TeamsPanel.js"," Component/EmployeesPanel.js"," Component/Overview.js"," Component/Projects.js"," Component/Teams.js"," Component/Employees.js"," Component/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","react_default","a","createElement","className","href","Component","SideBar","this","props","highlight","MainContainer","NavBar_NavBar","SideBar_SideBar","sidebar","children","ProjectsPanel","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","projects","_this2","fetch","then","response","ok","Error","statusText","json","data","setState","catch","err","console","log","sort","b","_id","localeCompare","map","activeDay","moment","diff","ProjectStartDate","key","ProjectName","react_router_dom","to","TeamsPanel","teams","team","TeamName","Employees","length","EmployeesPanel","employees","FirstName","LastName","Position","PositionName","Overview","MainContainer_MainContainer","ProjectsPanel_ProjectsPanel","TeamsPanel_TeamsPanel","EmployeesPanel_EmployeesPanel","Projects","projectEndDate","ProjectEndDate","ProjectDescription","utc","format","Teams","TeamLead","AddressStreet","AddressCity","AddressState","AddressZip","PhoneNum","Extension","HireDate","SalaryBonus","NotFound","App","react_router","exact","path","render","Overview_Overview","Projects_Projects","Teams_Teams","Employees_Employees","NotFound_NotFound","Boolean","window","location","hostname","match","ReactDOM","src_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b31d276f.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nexport default class NavBar extends Component {\n\n    render(){\n        return(\n            <nav className=\"navbar navbar-inverse navbar-fixed-top\">\n            <div className=\"container-fluid\">\n                <div className=\"navbar-header\">\n                <a className=\"navbar-brand\" href=\"/\">WEB422 - Project Portal</a>\n                </div>\n            </div>\n            </nav>\n        )\n    }\n}","import React, {Component} from 'react';\n\nexport default class SideBar extends Component {\n\n    render(){\n        return(\n            <div className=\"col-sm-3 col-md-2  sidebar\">\n              <ul className=\"nav nav-sidebar\">\n                <li className={(this.props.highlight === \"Overview\" ? 'active' : '')}><a href=\"/\">Overview <span className=\"sr-only\">(current)</span></a></li>\n              </ul>\n              <ul className=\"nav nav-sidebar\">\n                <li className={(this.props.highlight === \"Projects\" ? 'active' : '')}><a href=\"/projects\">Projects</a></li>\n                <li className={(this.props.highlight === \"Teams\" ? 'active' : '')}><a href=\"/teams\">Teams</a></li>\n                <li className={(this.props.highlight === \"Employees\" ? 'active' : '')}><a href=\"/employees\">Employees</a></li>\n              </ul>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport NavBar from './NavBar';\nimport SideBar from './SideBar';\n\nexport default class MainContainer extends Component {\n\n    render(){\n        return(\n            <div>\n                <NavBar/>\n                <div className=\"container-fluid\">\n                    <div className=\"row\">\n                        <SideBar highlight={this.props.sidebar}/>\n                        <div className=\" col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\">\n                            {this.props.children}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport moment from 'moment';\nimport {Link} from 'react-router-dom';\n\nexport default class ProjectsPanel extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            projects:[]\n        };\n    }\n\n    componentDidMount(){\n        fetch('https://murmuring-tor-86528.herokuapp.com/projects')\n        .then(response => {\n            if (!response.ok) {\n              throw new Error(response.statusText);\n            }\n            return response.json();\n          })\n        .then(data=>{\n            this.setState({\n                projects: data\n            })\n        }).catch(err=>{\n            console.log(err);\n        });\n    }\n\n    render(){\n        return(\n            <div className=\"panel panel-default\">\n                <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\">Projects</h3>\n                </div>\n                <div className=\"panel-body\">\n                    <div className=\"table-responsive overview-table\">\n                    <table className=\"table table-striped table-bordered\">\n                        <tbody>\n                        {this.state.projects.sort(function (a, b) {\n                            return ('' + a._id).localeCompare(b._id);}).map(projects => {\n                                let activeDay = moment().diff(projects.ProjectStartDate,'day');\n                                return(\n                                    <tr key={projects._id}>\n                                        <td>{projects.ProjectName}</td>\n                                        <td>Active {activeDay} Days</td>\n                                    </tr> \n                                );\n                            })\n                        }\n                        </tbody>\n                    </table>\n                    </div>\n                <Link to=\"/projects\" className=\"btn btn-primary form-control\">View All Project Data</Link>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\n\nexport default class TeamsPanel extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            teams:[]\n        };\n    }\n   \n\n    sortTeam(a,b){\n        return a._id - b._id;\n    }\n\n    \n\n    componentDidMount(){\n        fetch('https://murmuring-tor-86528.herokuapp.com/teams')\n        .then(response => {\n            if (!response.ok) {\n              throw new Error(response.statusText);\n            }\n            return response.json();\n          })\n        .then(data=>{\n            this.setState({\n                teams: data\n            })\n        }).catch(err=>{\n            console.log(err);\n        });\n    }\n\n    render(){\n        return(\n            <div className=\"panel panel-default\">\n                <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\">Teams</h3>\n                </div>\n                <div className=\"panel-body\">\n                    <div className=\"table-responsive overview-table\">\n                    <table className=\"table table-striped table-bordered\">\n                        <tbody>\n                        {this.state.teams.sort(function (a, b) {\n                            return ('' + a._id).localeCompare(b._id);}).map(team=>{\n                                return(\n                                    <tr key={team._id}>\n                                        <td>{team.TeamName}</td>\n                                        <td>{team.Employees.length} Employees</td>\n                                    </tr>\n                                );\n                            })\n                        } \n                        </tbody>\n                    </table>\n                    </div>\n                    <Link to=\"/teams\" className=\"btn btn-primary form-control\">View All Team Data</Link>\n                </div>\n            </div>\n        )\n    }\n}","import React, {Component} from 'react';\nimport {Link} from 'react-router-dom';\n\nexport default class EmployeesPanel extends Component {\n\n    constructor(props){\n        super(props);\n        this.state={\n            employees:[]\n        };\n    }\n\n    componentDidMount(){\n        fetch('https://murmuring-tor-86528.herokuapp.com/employees')\n        .then(response => {\n            if (!response.ok) {\n              throw new Error(response.statusText);\n            }\n            return response.json();\n          })\n        .then(data=>{\n            this.setState({\n                employees: data\n            })\n        }).catch(err=>{\n            console.log(err);\n        });\n    }\n\n    render(){\n        return(\n            <div className=\"panel panel-default\">\n                <div className=\"panel-heading\">\n                    <h3 className=\"panel-title\">Employees</h3>\n                </div>\n                <div className=\"panel-body\">\n                    <div className=\"table-responsive overview-table\">\n                    <table className=\"table table-striped table-bordered\">\n                        <tbody>\n                        {this.state.employees.sort(function (a, b) {\n                            return ('' + a._id).localeCompare(b._id);}).map(employees=>{\n                                return(\n                                    <tr key={employees._id}>\n                                        <td>{employees.FirstName} {employees.LastName}</td>\n                                        <td>{employees.Position.PositionName}</td>\n                                    </tr>\n                                );\n                            })\n                        } \n                        </tbody>\n                    </table>\n                    </div>\n                    <Link to=\"/employees\" className=\"btn btn-primary form-control\">View All Employee Data</Link>\n                </div>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport MainContainer from './MainContainer';\nimport ProjectsPanel from './ProjectsPanel';\nimport TeamsPanel from './TeamsPanel';\nimport EmployeesPanel from './EmployeesPanel';\n\nexport default class Overview extends Component {\n  render(){\n  return(\n      <MainContainer>\n        <h1 className=\"page-header\">Overview</h1>\n        <div className=\"row\">\n          <div className=\"col-md-4\">\n            <ProjectsPanel />\n          </div>\n          <div className=\"col-md-4\">\n            <TeamsPanel />\n          </div>\n          <div className=\"col-md-4\">\n            <EmployeesPanel />\n          </div>\n        </div>\n        </MainContainer>\n    );\n  }\n}\n\n","import React, {Component} from 'react'\nimport MainContainer from './MainContainer';\nimport moment from 'moment';\n\nexport default class Projects extends Component{\n    \n    constructor(props){\n        super(props);\n        this.state={\n            projects:[]\n        };\n    }\n\n    componentDidMount(){\n        fetch('https://murmuring-tor-86528.herokuapp.com/projects')\n        .then(response => {\n            if (!response.ok) {\n              throw new Error(response.statusText);\n            }\n            return response.json();\n          })\n        .then(data=>{\n            this.setState({\n                projects: data\n            })\n        }).catch(err=>{\n            console.log(err);\n        });\n    }\n\n    render(){\n        return(\n            <MainContainer sidebar=\"Projects\">\n                <h1 className=\"page-header\">Projects</h1>\n                <table className=\"table table-striped table-bordered\">\n                    <thead>\n                        <tr>\n                            <td><b>Name</b></td>\n                            <td><b>Description</b></td>\n                            <td><b>Start Date</b></td>\n                            <td><b>End Date</b></td>\n                        </tr>        \n                    </thead>\n                    <tbody>\n                        {this.state.projects.sort(function (a, b) {\n                            return ('' + a._id).localeCompare(b._id);}).map(projects=>{\n                            let projectEndDate = projects.ProjectEndDate ? projects.ProjectEndDate : \"n/a\";\n                                return(\n                                    <tr key={projects._id}>\n                                        <td>{projects.ProjectName}</td>\n                                        <td>{projects.ProjectDescription}</td>\n                                        <td>{moment(projects.ProjectStartDate).utc().format('LL')}</td>\n                                        <td>{projectEndDate}</td>\n                                    </tr>           \n                                );\n                            })\n                        }\n                    </tbody>\n                </table>\n            </MainContainer>\n        );\n    }\n}","import React, {Component} from 'react'\nimport MainContainer from './MainContainer';\n\nexport default class Teams extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            teams:[]\n        };\n    }\n\n    componentDidMount(){\n        fetch('https://murmuring-tor-86528.herokuapp.com/teams')\n        .then(response => {\n            if (!response.ok) {\n              throw new Error(response.statusText);\n            }\n            return response.json();\n          })\n        .then(data=>{\n            this.setState({\n                teams: data\n            })\n        }).catch(err=>{\n            console.log(err);\n        });\n    }\n\n    render(){\n        return(\n            <MainContainer sidebar=\"Teams\">\n                <h1 className=\"page-header\">Teams</h1>\n                <table className=\"table table-striped table-bordered\">\n                    <thead>\n                        <tr>\n                            <td><b>Name</b></td>\n                            <td><b>Projects</b></td>\n                            <td><b>Employees</b></td>\n                            <td><b>TeamLead</b></td>\n                        </tr>        \n                    </thead>\n                    <tbody>\n                        {this.state.teams.sort(function (a, b) {\n                            return ('' + a._id).localeCompare(b._id);}).map(teams=>{\n                                return(\n                                    <tr key={teams._id}>\n                                        <td>{teams.TeamName}</td>\n                                        <td>\n                                            {teams.Projects.map(projects=>{\n                                                return(\n                                                    <li key={projects._id}>{projects.ProjectName}</li>\n                                                )\n                                            })}</td>\n                                        <td>{teams.Employees.length} Employees</td>\n                                        <td>{teams.TeamLead.FirstName} {teams.TeamLead.LastName}</td>\n                                    </tr>             \n                                );\n                            })\n                        } \n                    </tbody>\n                </table>\n            </MainContainer>\n        );\n    }\n}","import React, {Component} from 'react'\nimport MainContainer from './MainContainer';\nimport moment from 'moment';\n\nexport default class Employees extends Component{\n    \n    constructor(props){\n        super(props);\n        this.state={\n            employees:[]\n        };\n    }\n\n    componentDidMount(){\n        fetch('https://murmuring-tor-86528.herokuapp.com/employees')\n        .then(response => {\n            if (!response.ok) {\n              throw new Error(response.statusText);\n            }\n            return response.json();\n          })\n        .then(data=>{\n            this.setState({\n                employees: data\n            })\n        }).catch(err=>{\n            console.log(err);\n        });\n    }\n\n    render(){\n        return(\n            <MainContainer sidebar=\"Employees\">\n                <h1 className=\"page-header\">Employees</h1>\n                <table className=\"table table-striped table-bordered\">\n                    <thead>\n                        <tr>\n                            <td><b>Name & Position</b></td>\n                            <td><b>Address</b></td>\n                            <td><b>Phone Num</b></td>\n                            <td><b>Hire Date</b></td>\n                            <td><b>Salary Bonus</b></td>\n                        </tr>        \n                    </thead>\n                    <tbody>\n                        {this.state.employees.sort(function (a, b) {\n                            return ('' + a._id).localeCompare(b._id);}).map(employees=>{\n                                return(\n                                    <tr key={employees._id}>                                \n                                        <td>{employees.FirstName} {employees.LastName} - {employees.Position.PositionName}</td>\n                                        <td>{employees.AddressStreet}. {employees.AddressCity} {employees.AddressState}, {employees.AddressZip}</td>\n                                        <td>{employees.PhoneNum} ex: {employees.Extension}</td>\n                                        <td>{moment(employees.HireDate).utc().format('LL')}</td>\n                                        <td>$ {employees.SalaryBonus}</td>\n                                    </tr>             \n                                );\n                            })\n                        } \n                    </tbody>\n                </table>\n            </MainContainer>\n        );\n    }\n}","import React, {Component} from 'react';\nimport MainContainer from './MainContainer';\n\nexport default class NotFound extends Component{\n    render(){\n        return(\n            <MainContainer>\n                <h1 className=\"page-header\">Not Found</h1>\n                <p>Page Not Fount</p>\n            </MainContainer>\n        );\n    }\n}\n","/*********************************************************************************\n* WEB422 – Assignment 04\n* I declare that this assignment is my own work in accordance with Seneca Academic Policy. No part of this\n* assignment has been copied manually or electronically from any other source (including web sites) or \n* distributed to other students.\n*\n* Name: Li-Ching, Cheng  Student ID: 143292175  Date: 2019/07/01\n*\n********************************************************************************/\n\nimport React, { Component } from 'react';\nimport {Route, Switch} from 'react-router-dom';\nimport Overview from './ Component/Overview';\nimport Projects from './ Component/Projects';\nimport Teams from './ Component/Teams';\nimport Employees from './ Component/Employees';\nimport NotFound from './ Component/NotFound';\n\n  class App extends Component { \n    render() {\n      return ( \n        <Switch>\n          <Route exact path='/' render={() => (<Overview />)} />\n          <Route exact path='/projects' render={() => (<Projects />)} />\n          <Route exact path='/teams' render={() => (<Teams />)} />\n          <Route exact path='/employees' render={() => (<Employees />)} />\n          <Route render={() => (<NotFound />)} />\n        </Switch>\n      ); \n    }\n  }\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>, \n    document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}